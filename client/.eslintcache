[{"C:\\Users\\JC069548\\rsvp-app\\client\\src\\index.jsx":"1","C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\App.jsx":"2","C:\\Users\\JC069548\\rsvp-app\\client\\src\\requests-handler\\requests-handler.js":"3","C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\InsertConfirmation.jsx":"4","C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\UpdateConfirmation.jsx":"5","C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\AttendeeList.jsx":"6"},{"size":167,"mtime":1607857127875,"results":"7","hashOfConfig":"8"},{"size":5616,"mtime":1607969864872,"results":"9","hashOfConfig":"8"},{"size":374,"mtime":1607962905397,"results":"10","hashOfConfig":"8"},{"size":349,"mtime":1607962622736,"results":"11","hashOfConfig":"8"},{"size":382,"mtime":1607962641734,"results":"12","hashOfConfig":"8"},{"size":533,"mtime":1607962672099,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17p8420",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\JC069548\\rsvp-app\\client\\src\\index.jsx",[],["30","31"],"C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\App.jsx",["32","33"],"import React from 'react';\r\nimport reqHandler from '../requests-handler/requests-handler.js';\r\nimport InsertConfirmation from './InsertConfirmation.jsx';\r\nimport UpdateConfirmation from './UpdateConfirmation.jsx';\r\nimport AttendeeList from './AttendeeList.jsx';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      guests: \"\",\r\n      submitEnabled: false,\r\n      submitResponse: {},\r\n      attendeeList: [],\r\n      showAttendeeList: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.showForm = this.showForm.bind(this);\r\n    this.showAttendees = this.showAttendees.bind(this);\r\n  }\r\n\r\n  //gets list of attendees from database on load\r\n  componentDidMount() {\r\n    reqHandler.getAttendeeList()\r\n      .then(res => {\r\n        this.setState({\r\n          attendeeList: res.data.data\r\n        });\r\n      });\r\n  }\r\n\r\n  //fucntion using regex to check if the email entered by the user is well formatted\r\n  validateEmail(email) {\r\n    const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regex.test(String(email).toLowerCase());\r\n  }\r\n\r\n  //returns false if first name, last name, eamail and number of guests are not set by user\r\n  validateInputs() {\r\n    for (var value in this.state) {\r\n      if (this.state.hasOwnProperty(value) && !this.state[value] && value !== \"submitEnabled\" && value !== \"showAttendeeList\") {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  //updates the changed field and then checks if email and other inputs are valid to decide if we can enable the submit button\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    }, () => {\r\n      this.setState({\r\n        submitEnabled: this.validateInputs() && this.validateEmail(this.state.email)\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  //sends user info to rsvps endpoint to create or update rsvp then updates 'submitResponse' with a message about the operation performed.\r\n  //Adds empty string to 'attendeeList'. This is useful after first attendee is added, we now know we can show the 'View Attendees' button\r\n  handleSubmit(event) {\r\n    const userInfo = (({ firstName, lastName, email, guests }) => ({ firstName, lastName, email, guests }))(this.state);\r\n\r\n    reqHandler.createOrUpdateRsvp(userInfo)\r\n      .then(res => {\r\n        this.setState({\r\n          submitResponse: res.data,\r\n          attendeeList: ['']\r\n        });\r\n      });\r\n    event.preventDefault();\r\n  }\r\n\r\n  //returns to the form asking for user info by resetting states to initial values\r\n  showForm(event) {\r\n    this.setState({\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      guests: '',\r\n      submitResponse: {},\r\n      showAttendeeList: false,\r\n      submitEnabled: false\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  //gets list of attendees from database and sets 'showAttendeeList' to true so the view of attendees can be rendered\r\n  showAttendees(event) {\r\n    reqHandler.getAttendeeList()\r\n      .then(res => {\r\n        this.setState({\r\n          attendeeList: res.data.data\r\n        });\r\n      });\r\n\r\n    this.setState({\r\n      showAttendeeList: true\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  //Renders the 'InsertConfirmation' view if a new rsvp was created, the 'UpdateConfirmation' view if one was updated, the 'AttendeeList' view if \r\n  //we click one the 'View Attendees' button, or the input form otherwise.\r\n  render() {\r\n    const operation = this.state.submitResponse && this.state.submitResponse.message;\r\n    let view;\r\n\r\n    if (operation === \"rsvp created\") {\r\n      view = <div><InsertConfirmation rsvp={this.state} />\r\n        <button onClick={this.showForm}>Back</button>\r\n      </div>;\r\n    }\r\n    else if (operation === \"rsvp updated\") {\r\n      view = <div><UpdateConfirmation rsvp={this.state} />\r\n        <button onClick={this.showForm}>Back</button>\r\n      </div>;\r\n    }\r\n    else if (this.state.showAttendeeList) {\r\n      view = <div><AttendeeList rsvps={this.state.attendeeList} />\r\n        <button onClick={this.showForm}>Back</button>\r\n      </div>;\r\n    }\r\n    else {\r\n      view = <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          First Name:\r\n        <input type=\"text\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Last Name:\r\n        <input type=\"text\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Email Address:\r\n        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Number of Guests:\r\n        <input type=\"text\" name=\"guests\" value={this.state.guests} onChange={this.handleChange} />\r\n        </label>\r\n        <br />\r\n        <input type=\"submit\" value=\"Submit\" disabled={!this.state.submitEnabled} />\r\n        <br />\r\n      </form>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {view}\r\n        {this.state.attendeeList.length && !operation && !this.state.showAttendeeList ?\r\n          <button className=\"info\" onClick={this.showAttendees}>View Attendees</button>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\JC069548\\rsvp-app\\client\\src\\requests-handler\\requests-handler.js",[],"C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\InsertConfirmation.jsx",["34"],"import React from 'react';\r\n\r\nconst InsertConfirmation = ({ rsvp }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"info-text\">\r\n        {`${rsvp.firstName}, you and your ${rsvp.guests} guests are now on the list.\r\n        We\\'ll send an email confirmation to ${rsvp.email}.`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsertConfirmation;","C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\UpdateConfirmation.jsx",["35","36"],"import React from 'react';\r\n\r\nconst UpdateConfirmation = ({ rsvp }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"info-text\">\r\n        {`${rsvp.firstName}, we\\'ve updated your RSVP so that you and your ${rsvp.guests} guests are now on the list.\r\n        We\\'ll send an email confirmation to ${rsvp.email}.`}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateConfirmation;","C:\\Users\\JC069548\\rsvp-app\\client\\src\\components\\AttendeeList.jsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":39,"column":29,"nodeType":"43","messageId":"44","endLine":39,"endColumn":30,"suggestions":"45"},{"ruleId":"41","severity":1,"message":"42","line":39,"column":54,"nodeType":"43","messageId":"44","endLine":39,"endColumn":55,"suggestions":"46"},{"ruleId":"41","severity":1,"message":"47","line":8,"column":10,"nodeType":"48","messageId":"44","endLine":8,"endColumn":11,"suggestions":"49"},{"ruleId":"41","severity":1,"message":"47","line":7,"column":32,"nodeType":"48","messageId":"44","endLine":7,"endColumn":33,"suggestions":"50"},{"ruleId":"41","severity":1,"message":"47","line":8,"column":10,"nodeType":"48","messageId":"44","endLine":8,"endColumn":11,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["54","55"],["56","57"],"Unnecessary escape character: \\'.","TemplateElement",["58","59"],["60","61"],["62","63"],"no-global-assign","no-unsafe-negation",{"messageId":"64","fix":"65","desc":"66"},{"messageId":"67","fix":"68","desc":"69"},{"messageId":"64","fix":"70","desc":"66"},{"messageId":"67","fix":"71","desc":"69"},{"messageId":"64","fix":"72","desc":"66"},{"messageId":"67","fix":"73","desc":"69"},{"messageId":"64","fix":"74","desc":"66"},{"messageId":"67","fix":"75","desc":"69"},{"messageId":"64","fix":"76","desc":"66"},{"messageId":"67","fix":"77","desc":"69"},"removeEscape",{"range":"78","text":"79"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"80","text":"81"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"82","text":"79"},{"range":"83","text":"81"},{"range":"84","text":"79"},{"range":"85","text":"81"},{"range":"86","text":"79"},{"range":"87","text":"81"},{"range":"88","text":"79"},{"range":"89","text":"81"},[1154,1155],"",[1154,1154],"\\",[1179,1180],[1179,1179],[225,226],[225,225],[161,162],[161,161],[258,259],[258,258]]